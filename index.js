// Generated by purs bundle 0.13.8
var PS = {};
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];              
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };                                                                                             
  var functorArray = new Functor($foreign.arrayMap);
  exports["map"] = map;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];                 
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS);
(function(exports) {
  "use strict";

  exports.fromCharArray = function (a) {
    return a.join("");
  };

  exports.toCharArray = function (s) {
    return s.split("");
  };

  exports.singleton = function (c) {
    return c;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];                                                                  
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["fromCharArray"] = $foreign.fromCharArray;
  exports["toCharArray"] = $foreign.toCharArray;
})(PS);
(function($PS) {
  "use strict";
  $PS["ArabicDots"] = $PS["ArabicDots"] || {};
  var exports = $PS["ArabicDots"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var isIn = function (needle) {
      return function (haystack) {
          var result = Data_String_CodeUnits.indexOf(Data_String_CodeUnits.singleton(needle))(haystack);
          if (result instanceof Data_Maybe.Just) {
              return true;
          };
          if (result instanceof Data_Maybe.Nothing) {
              return false;
          };
          throw new Error("Failed pattern match at ArabicDots (line 14, column 6 - line 16, column 24): " + [ result.constructor.name ]);
      };
  };
  var removeDot = function (character) {
      if (isIn(character)("\u0622\u0623\u0625\u0671\u0672\u0673\u0675\u0773\u0774" + ("\u0628\u062a\u062b" + "\u067c\u067d"))) {
          return "\u0627";
      };
      if (isIn(character)("\u0750\u0751\u0752\u0753\u0754\u0755\u0756\u08a0" + ("\u0628\u062a\u062b" + "\u067c\u067d"))) {
          return "\u066e";
      };
      if (isIn(character)("\u08a2\u0681\u0682\u0685\u0757\u0758\u076e\u076f\u0772\u077c" + "\u062c\u062d\u062e")) {
          return "\u062d";
      };
      if (isIn(character)("\u062f\u0630" + "\u0689\u068a\u068b\u068f\u0690\u06ee\u0759\u075a")) {
          return "\u062f";
      };
      if (isIn(character)("\u0631\u0632" + "\u0692\u06ef\u0693\u0694\u0695\u0696\u0697\u0699\u075b\u076b\u076c\u0771")) {
          return "\u0631";
      };
      if (isIn(character)("\u0633\u0634" + "\u069a\u069b\u069c\u075c\u076d\u0770\u077d\u077e\u06fa\ufeb5")) {
          return "\u0633";
      };
      if (isIn(character)("\u0635\u0636" + "\u069d\u069e\u06fb")) {
          return "\u0635";
      };
      if (isIn(character)("\u0637\u0638" + "\u069f\u08a3")) {
          return "\u0637";
      };
      if (isIn(character)("\u0639\u063a" + "\u06a0\u06fc\u075d\u075e\u075f")) {
          return "\u0639";
      };
      if (isIn(character)("\u0641" + "\u08a4\u06a2\u06a3\u06a5\u0760\u0761")) {
          return "\u06a1";
      };
      if (isIn(character)("\u0642" + "\u08a5\u06a7\u06a8")) {
          return "\u066f";
      };
      if (isIn(character)("\u0643" + "\u06ab\u06ac\u06ae\u077f\u063b\u063c\u06a9\u0762\u0763\u0764\u06aa\u06ad\u06af\u06b0\u06b2\u06b4\u06b1\u06b3\u06ac\u06ae\u077f\u06ab")) {
          return "\u0643";
      };
      if (isIn(character)("\u0644" + "\u08a6\u06b5\u06b6\u06b7\u06b8\u076a")) {
          return "\u0644";
      };
      if (isIn(character)("\u0645" + "\u0765\u0766\u08a7")) {
          return "\u0645";
      };
      if (isIn(character)("\u0646" + "\u06b9\u06bc\u06bd\u0767\u06bb\u0768\u0769\u06ba")) {
          return "\u06ba";
      };
      if (isIn(character)("\u0629\u0647" + "\u06d5\u06c2\u06c1\u06be\u06c3\u06c0\u06ff")) {
          return "\u0647";
      };
      if (isIn(character)("\u0648" + "\u0624\u0676\u06c4\u06ca\u06cf\u0778\u0779\u08ab\u06c5\ufbe0\ufbe1\u06c6\u0677\u06c7\u06c8\u06c9\u06cb")) {
          return "\u0648";
      };
      if (isIn(character)("\u064a\u0649" + "\u08a8\u08a9\u0626\u0678\u06cd\u06ce\u06d1\u077a\u077b\ufbae\u08ac\u06cc\u063d\u063e\u063f\u0775\u0776\u0777\u06d0\u06d2\u06d3")) {
          return "\u0649";
      };
      return character;
  };
  var removeDots = function (aString) {
      return Data_String_CodeUnits.fromCharArray(Data_Functor.map(Data_Functor.functorArray)(removeDot)(Data_String_CodeUnits.toCharArray(aString)));
  };
  exports["removeDots"] = removeDots;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.13.8
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["log"] = $foreign.log;
})(PS);
(function($PS) {
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var ArabicDots = $PS["ArabicDots"];
  var Effect_Console = $PS["Effect.Console"];                
  var removeDots = ArabicDots.removeDots;
  var main = Effect_Console.log("Welcome to the Latin Diacritic Remover");
  exports["removeDots"] = removeDots;
  exports["main"] = main;
})(PS);
PS["Main"].main();